apply plugin: 'com.android.library'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.0"

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        debug {
            minifyEnabled false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            // 混淆
            minifyEnabled false
            // Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
//            shrinkResources true
            // 前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己的定义混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // buildConfigField("boolean","enableLog","false")
//            applicationVariants.all { variant ->
//                variant.outputs.each { output ->
//                    def outputFile = output.outputFile
//                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                        // 输出apk名称为appname-1.0-beta1-xxxx-xx-xx.apk
//                        def fileName = "etc_park-${defaultConfig.versionName}-v1-${releaseTime()}.apk"
//                        output.outputFile = new File(outputFile.parent, fileName)
//                    }
//                }
//            }
        }
    }
    lintOptions {
        abortOnError false
    }
}
//task makesensorkit(type: Copy) {
//    delete 'build/libs/sensoro-sensor-kit.jar'
//    from('build/intermediates/bundles/release/')
//    into('build/libs/')
//    include('classes.jar')
//    rename ('classes.jar', 'sensoro-sensor-kit.jar')
//}
task clearJar(type: Delete) {
    def fileName = "sensoro-sensor-kit.jar"
    delete fileName////这行表示如果你已经打过一次包了，再进行打包则把原来的包删掉
}

task makeJar(type: Copy) {
    from('build/intermediates/bundles/release/') //这行表示要打包的文件的路径，根据下面的内容，其实是该路径下的classes.jar
    into('build/libs/')  //这行表示打包完毕后包的生成路径，也就是生成的包存在哪
    include('classes.jar')  //看到这行，如果你对分包有了解的话，你就可以看出来这行它只是将一些类打包了
    def fileName = "sensoro-sensor-kit.jar"
    rename('classes.jar', fileName)
}

makeJar.dependsOn(clearJar, build)
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:21.0.2'
    testCompile 'junit:junit:4.12'
//    compile 'com.googlecode.protobuf-java-format:protobuf-java-format:1.4'
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '2.5.0'
    compile 'no.nordicsemi.android:dfu:1.0.0'
}
