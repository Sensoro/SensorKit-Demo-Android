package com.sensoro.sensor.kit.update.proto;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protoStd1u1.proto

public final class ProtoStd1U1 {
  private ProtoStd1U1() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code StdCmd}
   */
  public enum StdCmd
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CMD_CFG_INT = 0;</code>
     */
    CMD_CFG_INT(0, 0),
    /**
     * <code>CMD_QRY_INT = 1;</code>
     */
    CMD_QRY_INT(1, 1),
    ;

    /**
     * <code>CMD_CFG_INT = 0;</code>
     */
    public static final int CMD_CFG_INT_VALUE = 0;
    /**
     * <code>CMD_QRY_INT = 1;</code>
     */
    public static final int CMD_QRY_INT_VALUE = 1;


    public final int getNumber() { return value; }

    public static StdCmd valueOf(int value) {
      switch (value) {
        case 0: return CMD_CFG_INT;
        case 1: return CMD_QRY_INT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<StdCmd>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<StdCmd>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<StdCmd>() {
            public StdCmd findValueByNumber(int number) {
              return StdCmd.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ProtoStd1U1.getDescriptor().getEnumTypes().get(0);
    }

    private static final StdCmd[] VALUES = values();

    public static StdCmd valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private StdCmd(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:StdCmd)
  }

  /**
   * Protobuf enum {@code StdCmdRet}
   */
  public enum StdCmdRet
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CMDRET_SUCCESS = 0;</code>
     */
    CMDRET_SUCCESS(0, 0),
    /**
     * <code>CMDRET_INNER_ERROR = 1;</code>
     */
    CMDRET_INNER_ERROR(1, 1),
    /**
     * <code>CMDRET_INVALID_ARG = 2;</code>
     */
    CMDRET_INVALID_ARG(2, 2),
    ;

    /**
     * <code>CMDRET_SUCCESS = 0;</code>
     */
    public static final int CMDRET_SUCCESS_VALUE = 0;
    /**
     * <code>CMDRET_INNER_ERROR = 1;</code>
     */
    public static final int CMDRET_INNER_ERROR_VALUE = 1;
    /**
     * <code>CMDRET_INVALID_ARG = 2;</code>
     */
    public static final int CMDRET_INVALID_ARG_VALUE = 2;


    public final int getNumber() { return value; }

    public static StdCmdRet valueOf(int value) {
      switch (value) {
        case 0: return CMDRET_SUCCESS;
        case 1: return CMDRET_INNER_ERROR;
        case 2: return CMDRET_INVALID_ARG;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<StdCmdRet>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<StdCmdRet>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<StdCmdRet>() {
            public StdCmdRet findValueByNumber(int number) {
              return StdCmdRet.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ProtoStd1U1.getDescriptor().getEnumTypes().get(1);
    }

    private static final StdCmdRet[] VALUES = values();

    public static StdCmdRet valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private StdCmdRet(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:StdCmdRet)
  }

  public interface MsgStdOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MsgStd)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>optional uint32 id = 1;</code>
     */
    int getId();

    /**
     * <code>optional .StdCmd cmd = 2;</code>
     */
    boolean hasCmd();
    /**
     * <code>optional .StdCmd cmd = 2;</code>
     */
    StdCmd getCmd();

    /**
     * <code>optional .StdCmdRet cmdRet = 3;</code>
     */
    boolean hasCmdRet();
    /**
     * <code>optional .StdCmdRet cmdRet = 3;</code>
     */
    StdCmdRet getCmdRet();

    /**
     * <code>optional uint32 int = 4;</code>
     */
    boolean hasInt();
    /**
     * <code>optional uint32 int = 4;</code>
     */
    int getInt();

    /**
     * <code>optional uint32 intLimit = 5;</code>
     */
    boolean hasIntLimit();
    /**
     * <code>optional uint32 intLimit = 5;</code>
     */
    int getIntLimit();

    /**
     * <code>optional bytes customData = 6;</code>
     */
    boolean hasCustomData();
    /**
     * <code>optional bytes customData = 6;</code>
     */
    com.google.protobuf.ByteString getCustomData();

    /**
     * <code>optional uint32 batt = 7;</code>
     */
    boolean hasBatt();
    /**
     * <code>optional uint32 batt = 7;</code>
     */
    int getBatt();

    /**
     * <code>optional float temp = 8;</code>
     */
    boolean hasTemp();
    /**
     * <code>optional float temp = 8;</code>
     */
    float getTemp();

    /**
     * <code>optional float light = 9;</code>
     */
    boolean hasLight();
    /**
     * <code>optional float light = 9;</code>
     */
    float getLight();

    /**
     * <code>optional float humi = 10;</code>
     */
    boolean hasHumi();
    /**
     * <code>optional float humi = 10;</code>
     */
    float getHumi();

    /**
     * <code>optional double lati = 11;</code>
     */
    boolean hasLati();
    /**
     * <code>optional double lati = 11;</code>
     */
    double getLati();

    /**
     * <code>optional double long = 12;</code>
     */
    boolean hasLong();
    /**
     * <code>optional double long = 12;</code>
     */
    double getLong();

    /**
     * <code>optional float magX = 13;</code>
     */
    boolean hasMagX();
    /**
     * <code>optional float magX = 13;</code>
     */
    float getMagX();

    /**
     * <code>optional float magY = 14;</code>
     */
    boolean hasMagY();
    /**
     * <code>optional float magY = 14;</code>
     */
    float getMagY();

    /**
     * <code>optional float magZ = 15;</code>
     */
    boolean hasMagZ();
    /**
     * <code>optional float magZ = 15;</code>
     */
    float getMagZ();

    /**
     * <code>optional float accX = 16;</code>
     */
    boolean hasAccX();
    /**
     * <code>optional float accX = 16;</code>
     */
    float getAccX();

    /**
     * <code>optional float accY = 17;</code>
     */
    boolean hasAccY();
    /**
     * <code>optional float accY = 17;</code>
     */
    float getAccY();

    /**
     * <code>optional float accZ = 18;</code>
     */
    boolean hasAccZ();
    /**
     * <code>optional float accZ = 18;</code>
     */
    float getAccZ();

    /**
     * <code>optional float gyrX = 19;</code>
     */
    boolean hasGyrX();
    /**
     * <code>optional float gyrX = 19;</code>
     */
    float getGyrX();

    /**
     * <code>optional float gyrY = 20;</code>
     */
    boolean hasGyrY();
    /**
     * <code>optional float gyrY = 20;</code>
     */
    float getGyrY();

    /**
     * <code>optional float gyrZ = 21;</code>
     */
    boolean hasGyrZ();
    /**
     * <code>optional float gyrZ = 21;</code>
     */
    float getGyrZ();

    /**
     * <code>optional uint32 enableClassB = 22;</code>
     */
    boolean hasEnableClassB();
    /**
     * <code>optional uint32 enableClassB = 22;</code>
     */
    int getEnableClassB();

    /**
     * <code>optional uint32 classBPeriodicity = 23;</code>
     */
    boolean hasClassBPeriodicity();
    /**
     * <code>optional uint32 classBPeriodicity = 23;</code>
     */
    int getClassBPeriodicity();

    /**
     * <code>optional uint32 classBDataRate = 24;</code>
     */
    boolean hasClassBDataRate();
    /**
     * <code>optional uint32 classBDataRate = 24;</code>
     */
    int getClassBDataRate();
  }
  /**
   * Protobuf type {@code MsgStd}
   */
  public static final class MsgStd extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:MsgStd)
      MsgStdOrBuilder {
    // Use MsgStd.newBuilder() to construct.
    private MsgStd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MsgStd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MsgStd defaultInstance;
    public static MsgStd getDefaultInstance() {
      return defaultInstance;
    }

    public MsgStd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MsgStd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              StdCmd value = StdCmd.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                cmd_ = value;
              }
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              StdCmdRet value = StdCmdRet.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                cmdRet_ = value;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              int_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              intLimit_ = input.readUInt32();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              customData_ = input.readBytes();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              batt_ = input.readUInt32();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              temp_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              light_ = input.readFloat();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              humi_ = input.readFloat();
              break;
            }
            case 89: {
              bitField0_ |= 0x00000400;
              lati_ = input.readDouble();
              break;
            }
            case 97: {
              bitField0_ |= 0x00000800;
              long_ = input.readDouble();
              break;
            }
            case 109: {
              bitField0_ |= 0x00001000;
              magX_ = input.readFloat();
              break;
            }
            case 117: {
              bitField0_ |= 0x00002000;
              magY_ = input.readFloat();
              break;
            }
            case 125: {
              bitField0_ |= 0x00004000;
              magZ_ = input.readFloat();
              break;
            }
            case 133: {
              bitField0_ |= 0x00008000;
              accX_ = input.readFloat();
              break;
            }
            case 141: {
              bitField0_ |= 0x00010000;
              accY_ = input.readFloat();
              break;
            }
            case 149: {
              bitField0_ |= 0x00020000;
              accZ_ = input.readFloat();
              break;
            }
            case 157: {
              bitField0_ |= 0x00040000;
              gyrX_ = input.readFloat();
              break;
            }
            case 165: {
              bitField0_ |= 0x00080000;
              gyrY_ = input.readFloat();
              break;
            }
            case 173: {
              bitField0_ |= 0x00100000;
              gyrZ_ = input.readFloat();
              break;
            }
            case 176: {
              bitField0_ |= 0x00200000;
              enableClassB_ = input.readUInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00400000;
              classBPeriodicity_ = input.readUInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00800000;
              classBDataRate_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ProtoStd1U1.internal_static_MsgStd_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ProtoStd1U1.internal_static_MsgStd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgStd.class, Builder.class);
    }

    public static com.google.protobuf.Parser<MsgStd> PARSER =
        new com.google.protobuf.AbstractParser<MsgStd>() {
      public MsgStd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgStd(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<MsgStd> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional uint32 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int CMD_FIELD_NUMBER = 2;
    private StdCmd cmd_;
    /**
     * <code>optional .StdCmd cmd = 2;</code>
     */
    public boolean hasCmd() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .StdCmd cmd = 2;</code>
     */
    public StdCmd getCmd() {
      return cmd_;
    }

    public static final int CMDRET_FIELD_NUMBER = 3;
    private StdCmdRet cmdRet_;
    /**
     * <code>optional .StdCmdRet cmdRet = 3;</code>
     */
    public boolean hasCmdRet() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .StdCmdRet cmdRet = 3;</code>
     */
    public StdCmdRet getCmdRet() {
      return cmdRet_;
    }

    public static final int INT_FIELD_NUMBER = 4;
    private int int_;
    /**
     * <code>optional uint32 int = 4;</code>
     */
    public boolean hasInt() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 int = 4;</code>
     */
    public int getInt() {
      return int_;
    }

    public static final int INTLIMIT_FIELD_NUMBER = 5;
    private int intLimit_;
    /**
     * <code>optional uint32 intLimit = 5;</code>
     */
    public boolean hasIntLimit() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 intLimit = 5;</code>
     */
    public int getIntLimit() {
      return intLimit_;
    }

    public static final int CUSTOMDATA_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString customData_;
    /**
     * <code>optional bytes customData = 6;</code>
     */
    public boolean hasCustomData() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bytes customData = 6;</code>
     */
    public com.google.protobuf.ByteString getCustomData() {
      return customData_;
    }

    public static final int BATT_FIELD_NUMBER = 7;
    private int batt_;
    /**
     * <code>optional uint32 batt = 7;</code>
     */
    public boolean hasBatt() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 batt = 7;</code>
     */
    public int getBatt() {
      return batt_;
    }

    public static final int TEMP_FIELD_NUMBER = 8;
    private float temp_;
    /**
     * <code>optional float temp = 8;</code>
     */
    public boolean hasTemp() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float temp = 8;</code>
     */
    public float getTemp() {
      return temp_;
    }

    public static final int LIGHT_FIELD_NUMBER = 9;
    private float light_;
    /**
     * <code>optional float light = 9;</code>
     */
    public boolean hasLight() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float light = 9;</code>
     */
    public float getLight() {
      return light_;
    }

    public static final int HUMI_FIELD_NUMBER = 10;
    private float humi_;
    /**
     * <code>optional float humi = 10;</code>
     */
    public boolean hasHumi() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional float humi = 10;</code>
     */
    public float getHumi() {
      return humi_;
    }

    public static final int LATI_FIELD_NUMBER = 11;
    private double lati_;
    /**
     * <code>optional double lati = 11;</code>
     */
    public boolean hasLati() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional double lati = 11;</code>
     */
    public double getLati() {
      return lati_;
    }

    public static final int LONG_FIELD_NUMBER = 12;
    private double long_;
    /**
     * <code>optional double long = 12;</code>
     */
    public boolean hasLong() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional double long = 12;</code>
     */
    public double getLong() {
      return long_;
    }

    public static final int MAGX_FIELD_NUMBER = 13;
    private float magX_;
    /**
     * <code>optional float magX = 13;</code>
     */
    public boolean hasMagX() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional float magX = 13;</code>
     */
    public float getMagX() {
      return magX_;
    }

    public static final int MAGY_FIELD_NUMBER = 14;
    private float magY_;
    /**
     * <code>optional float magY = 14;</code>
     */
    public boolean hasMagY() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional float magY = 14;</code>
     */
    public float getMagY() {
      return magY_;
    }

    public static final int MAGZ_FIELD_NUMBER = 15;
    private float magZ_;
    /**
     * <code>optional float magZ = 15;</code>
     */
    public boolean hasMagZ() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional float magZ = 15;</code>
     */
    public float getMagZ() {
      return magZ_;
    }

    public static final int ACCX_FIELD_NUMBER = 16;
    private float accX_;
    /**
     * <code>optional float accX = 16;</code>
     */
    public boolean hasAccX() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional float accX = 16;</code>
     */
    public float getAccX() {
      return accX_;
    }

    public static final int ACCY_FIELD_NUMBER = 17;
    private float accY_;
    /**
     * <code>optional float accY = 17;</code>
     */
    public boolean hasAccY() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional float accY = 17;</code>
     */
    public float getAccY() {
      return accY_;
    }

    public static final int ACCZ_FIELD_NUMBER = 18;
    private float accZ_;
    /**
     * <code>optional float accZ = 18;</code>
     */
    public boolean hasAccZ() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional float accZ = 18;</code>
     */
    public float getAccZ() {
      return accZ_;
    }

    public static final int GYRX_FIELD_NUMBER = 19;
    private float gyrX_;
    /**
     * <code>optional float gyrX = 19;</code>
     */
    public boolean hasGyrX() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional float gyrX = 19;</code>
     */
    public float getGyrX() {
      return gyrX_;
    }

    public static final int GYRY_FIELD_NUMBER = 20;
    private float gyrY_;
    /**
     * <code>optional float gyrY = 20;</code>
     */
    public boolean hasGyrY() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional float gyrY = 20;</code>
     */
    public float getGyrY() {
      return gyrY_;
    }

    public static final int GYRZ_FIELD_NUMBER = 21;
    private float gyrZ_;
    /**
     * <code>optional float gyrZ = 21;</code>
     */
    public boolean hasGyrZ() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional float gyrZ = 21;</code>
     */
    public float getGyrZ() {
      return gyrZ_;
    }

    public static final int ENABLECLASSB_FIELD_NUMBER = 22;
    private int enableClassB_;
    /**
     * <code>optional uint32 enableClassB = 22;</code>
     */
    public boolean hasEnableClassB() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional uint32 enableClassB = 22;</code>
     */
    public int getEnableClassB() {
      return enableClassB_;
    }

    public static final int CLASSBPERIODICITY_FIELD_NUMBER = 23;
    private int classBPeriodicity_;
    /**
     * <code>optional uint32 classBPeriodicity = 23;</code>
     */
    public boolean hasClassBPeriodicity() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional uint32 classBPeriodicity = 23;</code>
     */
    public int getClassBPeriodicity() {
      return classBPeriodicity_;
    }

    public static final int CLASSBDATARATE_FIELD_NUMBER = 24;
    private int classBDataRate_;
    /**
     * <code>optional uint32 classBDataRate = 24;</code>
     */
    public boolean hasClassBDataRate() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional uint32 classBDataRate = 24;</code>
     */
    public int getClassBDataRate() {
      return classBDataRate_;
    }

    private void initFields() {
      id_ = 0;
      cmd_ = StdCmd.CMD_CFG_INT;
      cmdRet_ = StdCmdRet.CMDRET_SUCCESS;
      int_ = 0;
      intLimit_ = 0;
      customData_ = com.google.protobuf.ByteString.EMPTY;
      batt_ = 0;
      temp_ = 0F;
      light_ = 0F;
      humi_ = 0F;
      lati_ = 0D;
      long_ = 0D;
      magX_ = 0F;
      magY_ = 0F;
      magZ_ = 0F;
      accX_ = 0F;
      accY_ = 0F;
      accZ_ = 0F;
      gyrX_ = 0F;
      gyrY_ = 0F;
      gyrZ_ = 0F;
      enableClassB_ = 0;
      classBPeriodicity_ = 0;
      classBDataRate_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, cmdRet_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, int_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, intLimit_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, customData_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, batt_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, temp_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, light_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, humi_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeDouble(11, lati_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeDouble(12, long_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeFloat(13, magX_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeFloat(14, magY_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeFloat(15, magZ_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeFloat(16, accX_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeFloat(17, accY_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeFloat(18, accZ_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeFloat(19, gyrX_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeFloat(20, gyrY_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeFloat(21, gyrZ_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeUInt32(22, enableClassB_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeUInt32(23, classBPeriodicity_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeUInt32(24, classBDataRate_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, cmdRet_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, int_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, intLimit_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, customData_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, batt_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, temp_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, light_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, humi_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, lati_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, long_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, magX_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, magY_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, magZ_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(16, accX_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(17, accY_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(18, accZ_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(19, gyrX_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(20, gyrY_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(21, gyrZ_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(22, enableClassB_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(23, classBPeriodicity_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(24, classBDataRate_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static MsgStd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgStd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgStd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgStd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgStd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MsgStd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static MsgStd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static MsgStd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static MsgStd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MsgStd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(MsgStd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MsgStd}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MsgStd)
        MsgStdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ProtoStd1U1.internal_static_MsgStd_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ProtoStd1U1.internal_static_MsgStd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgStd.class, Builder.class);
      }

      // Construct using ProtoStd1U1.MsgStd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cmd_ = StdCmd.CMD_CFG_INT;
        bitField0_ = (bitField0_ & ~0x00000002);
        cmdRet_ = StdCmdRet.CMDRET_SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000004);
        int_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        intLimit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        customData_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        batt_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        temp_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        light_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        humi_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        lati_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000400);
        long_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000800);
        magX_ = 0F;
        bitField0_ = (bitField0_ & ~0x00001000);
        magY_ = 0F;
        bitField0_ = (bitField0_ & ~0x00002000);
        magZ_ = 0F;
        bitField0_ = (bitField0_ & ~0x00004000);
        accX_ = 0F;
        bitField0_ = (bitField0_ & ~0x00008000);
        accY_ = 0F;
        bitField0_ = (bitField0_ & ~0x00010000);
        accZ_ = 0F;
        bitField0_ = (bitField0_ & ~0x00020000);
        gyrX_ = 0F;
        bitField0_ = (bitField0_ & ~0x00040000);
        gyrY_ = 0F;
        bitField0_ = (bitField0_ & ~0x00080000);
        gyrZ_ = 0F;
        bitField0_ = (bitField0_ & ~0x00100000);
        enableClassB_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        classBPeriodicity_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        classBDataRate_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ProtoStd1U1.internal_static_MsgStd_descriptor;
      }

      public MsgStd getDefaultInstanceForType() {
        return MsgStd.getDefaultInstance();
      }

      public MsgStd build() {
        MsgStd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgStd buildPartial() {
        MsgStd result = new MsgStd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cmd_ = cmd_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cmdRet_ = cmdRet_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.int_ = int_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.intLimit_ = intLimit_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.customData_ = customData_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.batt_ = batt_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.temp_ = temp_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.light_ = light_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.humi_ = humi_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.lati_ = lati_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.long_ = long_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.magX_ = magX_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.magY_ = magY_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.magZ_ = magZ_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.accX_ = accX_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.accY_ = accY_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.accZ_ = accZ_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.gyrX_ = gyrX_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.gyrY_ = gyrY_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.gyrZ_ = gyrZ_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.enableClassB_ = enableClassB_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.classBPeriodicity_ = classBPeriodicity_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.classBDataRate_ = classBDataRate_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgStd) {
          return mergeFrom((MsgStd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgStd other) {
        if (other == MsgStd.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasCmd()) {
          setCmd(other.getCmd());
        }
        if (other.hasCmdRet()) {
          setCmdRet(other.getCmdRet());
        }
        if (other.hasInt()) {
          setInt(other.getInt());
        }
        if (other.hasIntLimit()) {
          setIntLimit(other.getIntLimit());
        }
        if (other.hasCustomData()) {
          setCustomData(other.getCustomData());
        }
        if (other.hasBatt()) {
          setBatt(other.getBatt());
        }
        if (other.hasTemp()) {
          setTemp(other.getTemp());
        }
        if (other.hasLight()) {
          setLight(other.getLight());
        }
        if (other.hasHumi()) {
          setHumi(other.getHumi());
        }
        if (other.hasLati()) {
          setLati(other.getLati());
        }
        if (other.hasLong()) {
          setLong(other.getLong());
        }
        if (other.hasMagX()) {
          setMagX(other.getMagX());
        }
        if (other.hasMagY()) {
          setMagY(other.getMagY());
        }
        if (other.hasMagZ()) {
          setMagZ(other.getMagZ());
        }
        if (other.hasAccX()) {
          setAccX(other.getAccX());
        }
        if (other.hasAccY()) {
          setAccY(other.getAccY());
        }
        if (other.hasAccZ()) {
          setAccZ(other.getAccZ());
        }
        if (other.hasGyrX()) {
          setGyrX(other.getGyrX());
        }
        if (other.hasGyrY()) {
          setGyrY(other.getGyrY());
        }
        if (other.hasGyrZ()) {
          setGyrZ(other.getGyrZ());
        }
        if (other.hasEnableClassB()) {
          setEnableClassB(other.getEnableClassB());
        }
        if (other.hasClassBPeriodicity()) {
          setClassBPeriodicity(other.getClassBPeriodicity());
        }
        if (other.hasClassBDataRate()) {
          setClassBDataRate(other.getClassBDataRate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgStd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgStd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>optional uint32 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional uint32 id = 1;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private StdCmd cmd_ = StdCmd.CMD_CFG_INT;
      /**
       * <code>optional .StdCmd cmd = 2;</code>
       */
      public boolean hasCmd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .StdCmd cmd = 2;</code>
       */
      public StdCmd getCmd() {
        return cmd_;
      }
      /**
       * <code>optional .StdCmd cmd = 2;</code>
       */
      public Builder setCmd(StdCmd value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        cmd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .StdCmd cmd = 2;</code>
       */
      public Builder clearCmd() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cmd_ = StdCmd.CMD_CFG_INT;
        onChanged();
        return this;
      }

      private StdCmdRet cmdRet_ = StdCmdRet.CMDRET_SUCCESS;
      /**
       * <code>optional .StdCmdRet cmdRet = 3;</code>
       */
      public boolean hasCmdRet() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .StdCmdRet cmdRet = 3;</code>
       */
      public StdCmdRet getCmdRet() {
        return cmdRet_;
      }
      /**
       * <code>optional .StdCmdRet cmdRet = 3;</code>
       */
      public Builder setCmdRet(StdCmdRet value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        cmdRet_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .StdCmdRet cmdRet = 3;</code>
       */
      public Builder clearCmdRet() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cmdRet_ = StdCmdRet.CMDRET_SUCCESS;
        onChanged();
        return this;
      }

      private int int_ ;
      /**
       * <code>optional uint32 int = 4;</code>
       */
      public boolean hasInt() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 int = 4;</code>
       */
      public int getInt() {
        return int_;
      }
      /**
       * <code>optional uint32 int = 4;</code>
       */
      public Builder setInt(int value) {
        bitField0_ |= 0x00000008;
        int_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 int = 4;</code>
       */
      public Builder clearInt() {
        bitField0_ = (bitField0_ & ~0x00000008);
        int_ = 0;
        onChanged();
        return this;
      }

      private int intLimit_ ;
      /**
       * <code>optional uint32 intLimit = 5;</code>
       */
      public boolean hasIntLimit() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 intLimit = 5;</code>
       */
      public int getIntLimit() {
        return intLimit_;
      }
      /**
       * <code>optional uint32 intLimit = 5;</code>
       */
      public Builder setIntLimit(int value) {
        bitField0_ |= 0x00000010;
        intLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 intLimit = 5;</code>
       */
      public Builder clearIntLimit() {
        bitField0_ = (bitField0_ & ~0x00000010);
        intLimit_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString customData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes customData = 6;</code>
       */
      public boolean hasCustomData() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bytes customData = 6;</code>
       */
      public com.google.protobuf.ByteString getCustomData() {
        return customData_;
      }
      /**
       * <code>optional bytes customData = 6;</code>
       */
      public Builder setCustomData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        customData_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes customData = 6;</code>
       */
      public Builder clearCustomData() {
        bitField0_ = (bitField0_ & ~0x00000020);
        customData_ = getDefaultInstance().getCustomData();
        onChanged();
        return this;
      }

      private int batt_ ;
      /**
       * <code>optional uint32 batt = 7;</code>
       */
      public boolean hasBatt() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 batt = 7;</code>
       */
      public int getBatt() {
        return batt_;
      }
      /**
       * <code>optional uint32 batt = 7;</code>
       */
      public Builder setBatt(int value) {
        bitField0_ |= 0x00000040;
        batt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 batt = 7;</code>
       */
      public Builder clearBatt() {
        bitField0_ = (bitField0_ & ~0x00000040);
        batt_ = 0;
        onChanged();
        return this;
      }

      private float temp_ ;
      /**
       * <code>optional float temp = 8;</code>
       */
      public boolean hasTemp() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float temp = 8;</code>
       */
      public float getTemp() {
        return temp_;
      }
      /**
       * <code>optional float temp = 8;</code>
       */
      public Builder setTemp(float value) {
        bitField0_ |= 0x00000080;
        temp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float temp = 8;</code>
       */
      public Builder clearTemp() {
        bitField0_ = (bitField0_ & ~0x00000080);
        temp_ = 0F;
        onChanged();
        return this;
      }

      private float light_ ;
      /**
       * <code>optional float light = 9;</code>
       */
      public boolean hasLight() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float light = 9;</code>
       */
      public float getLight() {
        return light_;
      }
      /**
       * <code>optional float light = 9;</code>
       */
      public Builder setLight(float value) {
        bitField0_ |= 0x00000100;
        light_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float light = 9;</code>
       */
      public Builder clearLight() {
        bitField0_ = (bitField0_ & ~0x00000100);
        light_ = 0F;
        onChanged();
        return this;
      }

      private float humi_ ;
      /**
       * <code>optional float humi = 10;</code>
       */
      public boolean hasHumi() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional float humi = 10;</code>
       */
      public float getHumi() {
        return humi_;
      }
      /**
       * <code>optional float humi = 10;</code>
       */
      public Builder setHumi(float value) {
        bitField0_ |= 0x00000200;
        humi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float humi = 10;</code>
       */
      public Builder clearHumi() {
        bitField0_ = (bitField0_ & ~0x00000200);
        humi_ = 0F;
        onChanged();
        return this;
      }

      private double lati_ ;
      /**
       * <code>optional double lati = 11;</code>
       */
      public boolean hasLati() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional double lati = 11;</code>
       */
      public double getLati() {
        return lati_;
      }
      /**
       * <code>optional double lati = 11;</code>
       */
      public Builder setLati(double value) {
        bitField0_ |= 0x00000400;
        lati_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double lati = 11;</code>
       */
      public Builder clearLati() {
        bitField0_ = (bitField0_ & ~0x00000400);
        lati_ = 0D;
        onChanged();
        return this;
      }

      private double long_ ;
      /**
       * <code>optional double long = 12;</code>
       */
      public boolean hasLong() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional double long = 12;</code>
       */
      public double getLong() {
        return long_;
      }
      /**
       * <code>optional double long = 12;</code>
       */
      public Builder setLong(double value) {
        bitField0_ |= 0x00000800;
        long_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double long = 12;</code>
       */
      public Builder clearLong() {
        bitField0_ = (bitField0_ & ~0x00000800);
        long_ = 0D;
        onChanged();
        return this;
      }

      private float magX_ ;
      /**
       * <code>optional float magX = 13;</code>
       */
      public boolean hasMagX() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional float magX = 13;</code>
       */
      public float getMagX() {
        return magX_;
      }
      /**
       * <code>optional float magX = 13;</code>
       */
      public Builder setMagX(float value) {
        bitField0_ |= 0x00001000;
        magX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float magX = 13;</code>
       */
      public Builder clearMagX() {
        bitField0_ = (bitField0_ & ~0x00001000);
        magX_ = 0F;
        onChanged();
        return this;
      }

      private float magY_ ;
      /**
       * <code>optional float magY = 14;</code>
       */
      public boolean hasMagY() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional float magY = 14;</code>
       */
      public float getMagY() {
        return magY_;
      }
      /**
       * <code>optional float magY = 14;</code>
       */
      public Builder setMagY(float value) {
        bitField0_ |= 0x00002000;
        magY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float magY = 14;</code>
       */
      public Builder clearMagY() {
        bitField0_ = (bitField0_ & ~0x00002000);
        magY_ = 0F;
        onChanged();
        return this;
      }

      private float magZ_ ;
      /**
       * <code>optional float magZ = 15;</code>
       */
      public boolean hasMagZ() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional float magZ = 15;</code>
       */
      public float getMagZ() {
        return magZ_;
      }
      /**
       * <code>optional float magZ = 15;</code>
       */
      public Builder setMagZ(float value) {
        bitField0_ |= 0x00004000;
        magZ_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float magZ = 15;</code>
       */
      public Builder clearMagZ() {
        bitField0_ = (bitField0_ & ~0x00004000);
        magZ_ = 0F;
        onChanged();
        return this;
      }

      private float accX_ ;
      /**
       * <code>optional float accX = 16;</code>
       */
      public boolean hasAccX() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional float accX = 16;</code>
       */
      public float getAccX() {
        return accX_;
      }
      /**
       * <code>optional float accX = 16;</code>
       */
      public Builder setAccX(float value) {
        bitField0_ |= 0x00008000;
        accX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float accX = 16;</code>
       */
      public Builder clearAccX() {
        bitField0_ = (bitField0_ & ~0x00008000);
        accX_ = 0F;
        onChanged();
        return this;
      }

      private float accY_ ;
      /**
       * <code>optional float accY = 17;</code>
       */
      public boolean hasAccY() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional float accY = 17;</code>
       */
      public float getAccY() {
        return accY_;
      }
      /**
       * <code>optional float accY = 17;</code>
       */
      public Builder setAccY(float value) {
        bitField0_ |= 0x00010000;
        accY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float accY = 17;</code>
       */
      public Builder clearAccY() {
        bitField0_ = (bitField0_ & ~0x00010000);
        accY_ = 0F;
        onChanged();
        return this;
      }

      private float accZ_ ;
      /**
       * <code>optional float accZ = 18;</code>
       */
      public boolean hasAccZ() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional float accZ = 18;</code>
       */
      public float getAccZ() {
        return accZ_;
      }
      /**
       * <code>optional float accZ = 18;</code>
       */
      public Builder setAccZ(float value) {
        bitField0_ |= 0x00020000;
        accZ_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float accZ = 18;</code>
       */
      public Builder clearAccZ() {
        bitField0_ = (bitField0_ & ~0x00020000);
        accZ_ = 0F;
        onChanged();
        return this;
      }

      private float gyrX_ ;
      /**
       * <code>optional float gyrX = 19;</code>
       */
      public boolean hasGyrX() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional float gyrX = 19;</code>
       */
      public float getGyrX() {
        return gyrX_;
      }
      /**
       * <code>optional float gyrX = 19;</code>
       */
      public Builder setGyrX(float value) {
        bitField0_ |= 0x00040000;
        gyrX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float gyrX = 19;</code>
       */
      public Builder clearGyrX() {
        bitField0_ = (bitField0_ & ~0x00040000);
        gyrX_ = 0F;
        onChanged();
        return this;
      }

      private float gyrY_ ;
      /**
       * <code>optional float gyrY = 20;</code>
       */
      public boolean hasGyrY() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional float gyrY = 20;</code>
       */
      public float getGyrY() {
        return gyrY_;
      }
      /**
       * <code>optional float gyrY = 20;</code>
       */
      public Builder setGyrY(float value) {
        bitField0_ |= 0x00080000;
        gyrY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float gyrY = 20;</code>
       */
      public Builder clearGyrY() {
        bitField0_ = (bitField0_ & ~0x00080000);
        gyrY_ = 0F;
        onChanged();
        return this;
      }

      private float gyrZ_ ;
      /**
       * <code>optional float gyrZ = 21;</code>
       */
      public boolean hasGyrZ() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional float gyrZ = 21;</code>
       */
      public float getGyrZ() {
        return gyrZ_;
      }
      /**
       * <code>optional float gyrZ = 21;</code>
       */
      public Builder setGyrZ(float value) {
        bitField0_ |= 0x00100000;
        gyrZ_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float gyrZ = 21;</code>
       */
      public Builder clearGyrZ() {
        bitField0_ = (bitField0_ & ~0x00100000);
        gyrZ_ = 0F;
        onChanged();
        return this;
      }

      private int enableClassB_ ;
      /**
       * <code>optional uint32 enableClassB = 22;</code>
       */
      public boolean hasEnableClassB() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional uint32 enableClassB = 22;</code>
       */
      public int getEnableClassB() {
        return enableClassB_;
      }
      /**
       * <code>optional uint32 enableClassB = 22;</code>
       */
      public Builder setEnableClassB(int value) {
        bitField0_ |= 0x00200000;
        enableClassB_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 enableClassB = 22;</code>
       */
      public Builder clearEnableClassB() {
        bitField0_ = (bitField0_ & ~0x00200000);
        enableClassB_ = 0;
        onChanged();
        return this;
      }

      private int classBPeriodicity_ ;
      /**
       * <code>optional uint32 classBPeriodicity = 23;</code>
       */
      public boolean hasClassBPeriodicity() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional uint32 classBPeriodicity = 23;</code>
       */
      public int getClassBPeriodicity() {
        return classBPeriodicity_;
      }
      /**
       * <code>optional uint32 classBPeriodicity = 23;</code>
       */
      public Builder setClassBPeriodicity(int value) {
        bitField0_ |= 0x00400000;
        classBPeriodicity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 classBPeriodicity = 23;</code>
       */
      public Builder clearClassBPeriodicity() {
        bitField0_ = (bitField0_ & ~0x00400000);
        classBPeriodicity_ = 0;
        onChanged();
        return this;
      }

      private int classBDataRate_ ;
      /**
       * <code>optional uint32 classBDataRate = 24;</code>
       */
      public boolean hasClassBDataRate() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional uint32 classBDataRate = 24;</code>
       */
      public int getClassBDataRate() {
        return classBDataRate_;
      }
      /**
       * <code>optional uint32 classBDataRate = 24;</code>
       */
      public Builder setClassBDataRate(int value) {
        bitField0_ |= 0x00800000;
        classBDataRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 classBDataRate = 24;</code>
       */
      public Builder clearClassBDataRate() {
        bitField0_ = (bitField0_ & ~0x00800000);
        classBDataRate_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MsgStd)
    }

    static {
      defaultInstance = new MsgStd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MsgStd)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MsgStd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MsgStd_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\021protoStd1u1.proto\"\225\003\n\006MsgStd\022\n\n\002id\030\001 \001" +
      "(\r\022\024\n\003cmd\030\002 \001(\0162\007.StdCmd\022\032\n\006cmdRet\030\003 \001(\016" +
      "2\n.StdCmdRet\022\013\n\003int\030\004 \001(\r\022\020\n\010intLimit\030\005 " +
      "\001(\r\022\022\n\ncustomData\030\006 \001(\014\022\014\n\004batt\030\007 \001(\r\022\014\n" +
      "\004temp\030\010 \001(\002\022\r\n\005light\030\t \001(\002\022\014\n\004humi\030\n \001(\002" +
      "\022\014\n\004lati\030\013 \001(\001\022\014\n\004long\030\014 \001(\001\022\014\n\004magX\030\r \001" +
      "(\002\022\014\n\004magY\030\016 \001(\002\022\014\n\004magZ\030\017 \001(\002\022\014\n\004accX\030\020" +
      " \001(\002\022\014\n\004accY\030\021 \001(\002\022\014\n\004accZ\030\022 \001(\002\022\014\n\004gyrX" +
      "\030\023 \001(\002\022\014\n\004gyrY\030\024 \001(\002\022\014\n\004gyrZ\030\025 \001(\002\022\024\n\014en" +
      "ableClassB\030\026 \001(\r\022\031\n\021classBPeriodicity\030\027 ",
      "\001(\r\022\026\n\016classBDataRate\030\030 \001(\r**\n\006StdCmd\022\017\n" +
      "\013CMD_CFG_INT\020\000\022\017\n\013CMD_QRY_INT\020\001*O\n\tStdCm" +
      "dRet\022\022\n\016CMDRET_SUCCESS\020\000\022\026\n\022CMDRET_INNER" +
      "_ERROR\020\001\022\026\n\022CMDRET_INVALID_ARG\020\002"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_MsgStd_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_MsgStd_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_MsgStd_descriptor,
        new String[] { "Id", "Cmd", "CmdRet", "Int", "IntLimit", "CustomData", "Batt", "Temp", "Light", "Humi", "Lati", "Long", "MagX", "MagY", "MagZ", "AccX", "AccY", "AccZ", "GyrX", "GyrY", "GyrZ", "EnableClassB", "ClassBPeriodicity", "ClassBDataRate", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
