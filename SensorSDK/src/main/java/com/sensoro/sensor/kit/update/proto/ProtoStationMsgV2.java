package com.sensoro.sensor.kit.update.proto;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoStationMsg_v2.proto

public final class ProtoStationMsgV2 {
  private ProtoStationMsgV2() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code CmdRet}
   */
  public enum CmdRet
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CMD_RET_NONE = 0;</code>
     */
    CMD_RET_NONE(0, 0),
    /**
     * <code>CMD_RET_SUC = 1;</code>
     */
    CMD_RET_SUC(1, 1),
    /**
     * <code>CMD_RET_INVALID_CMD = 2;</code>
     */
    CMD_RET_INVALID_CMD(2, 2),
    /**
     * <code>CMD_RET_INVALID_ARG = 3;</code>
     */
    CMD_RET_INVALID_ARG(3, 3),
    /**
     * <code>CMD_RET_INVALID_STATE = 4;</code>
     */
    CMD_RET_INVALID_STATE(4, 4),
    ;

    /**
     * <code>CMD_RET_NONE = 0;</code>
     */
    public static final int CMD_RET_NONE_VALUE = 0;
    /**
     * <code>CMD_RET_SUC = 1;</code>
     */
    public static final int CMD_RET_SUC_VALUE = 1;
    /**
     * <code>CMD_RET_INVALID_CMD = 2;</code>
     */
    public static final int CMD_RET_INVALID_CMD_VALUE = 2;
    /**
     * <code>CMD_RET_INVALID_ARG = 3;</code>
     */
    public static final int CMD_RET_INVALID_ARG_VALUE = 3;
    /**
     * <code>CMD_RET_INVALID_STATE = 4;</code>
     */
    public static final int CMD_RET_INVALID_STATE_VALUE = 4;


    public final int getNumber() { return value; }

    public static CmdRet valueOf(int value) {
      switch (value) {
        case 0: return CMD_RET_NONE;
        case 1: return CMD_RET_SUC;
        case 2: return CMD_RET_INVALID_CMD;
        case 3: return CMD_RET_INVALID_ARG;
        case 4: return CMD_RET_INVALID_STATE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CmdRet>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CmdRet>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CmdRet>() {
            public CmdRet findValueByNumber(int number) {
              return CmdRet.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ProtoStationMsgV2.getDescriptor().getEnumTypes().get(0);
    }

    private static final CmdRet[] VALUES = values();

    public static CmdRet valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private CmdRet(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CmdRet)
  }

  /**
   * Protobuf enum {@code NwkAccessMode}
   */
  public enum NwkAccessMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NWK_MODE_ETH = 0;</code>
     */
    NWK_MODE_ETH(0, 0),
    /**
     * <code>NWK_MODE_WIFI = 1;</code>
     */
    NWK_MODE_WIFI(1, 1),
    /**
     * <code>NWK_MODE_CELLULAR = 2;</code>
     */
    NWK_MODE_CELLULAR(2, 2),
    ;

    /**
     * <code>NWK_MODE_ETH = 0;</code>
     */
    public static final int NWK_MODE_ETH_VALUE = 0;
    /**
     * <code>NWK_MODE_WIFI = 1;</code>
     */
    public static final int NWK_MODE_WIFI_VALUE = 1;
    /**
     * <code>NWK_MODE_CELLULAR = 2;</code>
     */
    public static final int NWK_MODE_CELLULAR_VALUE = 2;


    public final int getNumber() { return value; }

    public static NwkAccessMode valueOf(int value) {
      switch (value) {
        case 0: return NWK_MODE_ETH;
        case 1: return NWK_MODE_WIFI;
        case 2: return NWK_MODE_CELLULAR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NwkAccessMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<NwkAccessMode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NwkAccessMode>() {
            public NwkAccessMode findValueByNumber(int number) {
              return NwkAccessMode.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ProtoStationMsgV2.getDescriptor().getEnumTypes().get(1);
    }

    private static final NwkAccessMode[] VALUES = values();

    public static NwkAccessMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private NwkAccessMode(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:NwkAccessMode)
  }

  /**
   * Protobuf enum {@code IPAllocationMode}
   */
  public enum IPAllocationMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>IP_ALLOC_DHCP = 0;</code>
     */
    IP_ALLOC_DHCP(0, 0),
    /**
     * <code>IP_ALLOC_STATIC = 1;</code>
     */
    IP_ALLOC_STATIC(1, 1),
    ;

    /**
     * <code>IP_ALLOC_DHCP = 0;</code>
     */
    public static final int IP_ALLOC_DHCP_VALUE = 0;
    /**
     * <code>IP_ALLOC_STATIC = 1;</code>
     */
    public static final int IP_ALLOC_STATIC_VALUE = 1;


    public final int getNumber() { return value; }

    public static IPAllocationMode valueOf(int value) {
      switch (value) {
        case 0: return IP_ALLOC_DHCP;
        case 1: return IP_ALLOC_STATIC;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<IPAllocationMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<IPAllocationMode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<IPAllocationMode>() {
            public IPAllocationMode findValueByNumber(int number) {
              return IPAllocationMode.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ProtoStationMsgV2.getDescriptor().getEnumTypes().get(2);
    }

    private static final IPAllocationMode[] VALUES = values();

    public static IPAllocationMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private IPAllocationMode(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:IPAllocationMode)
  }

  public interface StationMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:StationMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CmdRet ret = 1;</code>
     *
     * <pre>
     *命令返回
     * </pre>
     */
    boolean hasRet();
    /**
     * <code>optional .CmdRet ret = 1;</code>
     *
     * <pre>
     *命令返回
     * </pre>
     */
    CmdRet getRet();

    /**
     * <code>optional string sn = 2;</code>
     *
     * <pre>
     *基站SN，只读
     * </pre>
     */
    boolean hasSn();
    /**
     * <code>optional string sn = 2;</code>
     *
     * <pre>
     *基站SN，只读
     * </pre>
     */
    String getSn();
    /**
     * <code>optional string sn = 2;</code>
     *
     * <pre>
     *基站SN，只读
     * </pre>
     */
    com.google.protobuf.ByteString
        getSnBytes();

    /**
     * <code>optional string netid = 3;</code>
     *
     * <pre>
     *LoRaWAN网络ID
     * </pre>
     */
    boolean hasNetid();
    /**
     * <code>optional string netid = 3;</code>
     *
     * <pre>
     *LoRaWAN网络ID
     * </pre>
     */
    String getNetid();
    /**
     * <code>optional string netid = 3;</code>
     *
     * <pre>
     *LoRaWAN网络ID
     * </pre>
     */
    com.google.protobuf.ByteString
        getNetidBytes();

    /**
     * <code>optional string mcdomain = 4;</code>
     *
     * <pre>
     *LoRaWAN MACServer地址
     * </pre>
     */
    boolean hasMcdomain();
    /**
     * <code>optional string mcdomain = 4;</code>
     *
     * <pre>
     *LoRaWAN MACServer地址
     * </pre>
     */
    String getMcdomain();
    /**
     * <code>optional string mcdomain = 4;</code>
     *
     * <pre>
     *LoRaWAN MACServer地址
     * </pre>
     */
    com.google.protobuf.ByteString
        getMcdomainBytes();

    /**
     * <code>optional string mcport = 5;</code>
     *
     * <pre>
     *LoRaWAN MACServer端口
     * </pre>
     */
    boolean hasMcport();
    /**
     * <code>optional string mcport = 5;</code>
     *
     * <pre>
     *LoRaWAN MACServer端口
     * </pre>
     */
    String getMcport();
    /**
     * <code>optional string mcport = 5;</code>
     *
     * <pre>
     *LoRaWAN MACServer端口
     * </pre>
     */
    com.google.protobuf.ByteString
        getMcportBytes();

    /**
     * <code>optional string key = 6;</code>
     *
     * <pre>
     *基站与LoRaWAN MACServer通信加密密钥
     * </pre>
     */
    boolean hasKey();
    /**
     * <code>optional string key = 6;</code>
     *
     * <pre>
     *基站与LoRaWAN MACServer通信加密密钥
     * </pre>
     */
    String getKey();
    /**
     * <code>optional string key = 6;</code>
     *
     * <pre>
     *基站与LoRaWAN MACServer通信加密密钥
     * </pre>
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>optional .NwkAccessMode nwk_access_mode = 7;</code>
     *
     * <pre>
     *网络接入方式
     * </pre>
     */
    boolean hasNwkAccessMode();
    /**
     * <code>optional .NwkAccessMode nwk_access_mode = 7;</code>
     *
     * <pre>
     *网络接入方式
     * </pre>
     */
    NwkAccessMode getNwkAccessMode();

    /**
     * <code>optional .IPAllocationMode ip_alloc = 8;</code>
     *
     * <pre>
     *IP地址分配方式
     * </pre>
     */
    boolean hasIpAlloc();
    /**
     * <code>optional .IPAllocationMode ip_alloc = 8;</code>
     *
     * <pre>
     *IP地址分配方式
     * </pre>
     */
    IPAllocationMode getIpAlloc();

    /**
     * <code>optional string ip = 9;</code>
     *
     * <pre>
     *IP地址
     * </pre>
     */
    boolean hasIp();
    /**
     * <code>optional string ip = 9;</code>
     *
     * <pre>
     *IP地址
     * </pre>
     */
    String getIp();
    /**
     * <code>optional string ip = 9;</code>
     *
     * <pre>
     *IP地址
     * </pre>
     */
    com.google.protobuf.ByteString
        getIpBytes();

    /**
     * <code>optional string gateway = 10;</code>
     *
     * <pre>
     *网关地址
     * </pre>
     */
    boolean hasGateway();
    /**
     * <code>optional string gateway = 10;</code>
     *
     * <pre>
     *网关地址
     * </pre>
     */
    String getGateway();
    /**
     * <code>optional string gateway = 10;</code>
     *
     * <pre>
     *网关地址
     * </pre>
     */
    com.google.protobuf.ByteString
        getGatewayBytes();

    /**
     * <code>optional string mask = 11;</code>
     *
     * <pre>
     *子网掩码
     * </pre>
     */
    boolean hasMask();
    /**
     * <code>optional string mask = 11;</code>
     *
     * <pre>
     *子网掩码
     * </pre>
     */
    String getMask();
    /**
     * <code>optional string mask = 11;</code>
     *
     * <pre>
     *子网掩码
     * </pre>
     */
    com.google.protobuf.ByteString
        getMaskBytes();

    /**
     * <code>optional string pdns = 12;</code>
     *
     * <pre>
     *主DNS
     * </pre>
     */
    boolean hasPdns();
    /**
     * <code>optional string pdns = 12;</code>
     *
     * <pre>
     *主DNS
     * </pre>
     */
    String getPdns();
    /**
     * <code>optional string pdns = 12;</code>
     *
     * <pre>
     *主DNS
     * </pre>
     */
    com.google.protobuf.ByteString
        getPdnsBytes();

    /**
     * <code>optional string adns = 13;</code>
     *
     * <pre>
     *从DNS
     * </pre>
     */
    boolean hasAdns();
    /**
     * <code>optional string adns = 13;</code>
     *
     * <pre>
     *从DNS
     * </pre>
     */
    String getAdns();
    /**
     * <code>optional string adns = 13;</code>
     *
     * <pre>
     *从DNS
     * </pre>
     */
    com.google.protobuf.ByteString
        getAdnsBytes();

    /**
     * <code>optional string ssid = 14;</code>
     *
     * <pre>
     *WiFi联网的SSID
     * </pre>
     */
    boolean hasSsid();
    /**
     * <code>optional string ssid = 14;</code>
     *
     * <pre>
     *WiFi联网的SSID
     * </pre>
     */
    String getSsid();
    /**
     * <code>optional string ssid = 14;</code>
     *
     * <pre>
     *WiFi联网的SSID
     * </pre>
     */
    com.google.protobuf.ByteString
        getSsidBytes();

    /**
     * <code>optional string pwd = 15;</code>
     *
     * <pre>
     *WiFi联网的Password
     * </pre>
     */
    boolean hasPwd();
    /**
     * <code>optional string pwd = 15;</code>
     *
     * <pre>
     *WiFi联网的Password
     * </pre>
     */
    String getPwd();
    /**
     * <code>optional string pwd = 15;</code>
     *
     * <pre>
     *WiFi联网的Password
     * </pre>
     */
    com.google.protobuf.ByteString
        getPwdBytes();

    /**
     * <code>optional string encrypt = 16;</code>
     *
     * <pre>
     *WiFi联网的加密方式
     * </pre>
     */
    boolean hasEncrypt();
    /**
     * <code>optional string encrypt = 16;</code>
     *
     * <pre>
     *WiFi联网的加密方式
     * </pre>
     */
    String getEncrypt();
    /**
     * <code>optional string encrypt = 16;</code>
     *
     * <pre>
     *WiFi联网的加密方式
     * </pre>
     */
    com.google.protobuf.ByteString
        getEncryptBytes();

    /**
     * <code>optional uint32 self_test_code = 17;</code>
     *
     * <pre>
     *自检错误码
     * </pre>
     */
    boolean hasSelfTestCode();
    /**
     * <code>optional uint32 self_test_code = 17;</code>
     *
     * <pre>
     *自检错误码
     * </pre>
     */
    int getSelfTestCode();

    /**
     * <code>optional uint32 sgl_freq = 18;</code>
     *
     * <pre>
     *单通道基站频点
     * </pre>
     */
    boolean hasSglFreq();
    /**
     * <code>optional uint32 sgl_freq = 18;</code>
     *
     * <pre>
     *单通道基站频点
     * </pre>
     */
    int getSglFreq();

    /**
     * <code>optional uint32 sgl_dr = 19;</code>
     *
     * <pre>
     *单通道基站DR    
     * </pre>
     */
    boolean hasSglDr();
    /**
     * <code>optional uint32 sgl_dr = 19;</code>
     *
     * <pre>
     *单通道基站DR    
     * </pre>
     */
    int getSglDr();
  }
  /**
   * Protobuf type {@code StationMsg}
   */
  public static final class StationMsg extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:StationMsg)
      StationMsgOrBuilder {
    // Use StationMsg.newBuilder() to construct.
    private StationMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private StationMsg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final StationMsg defaultInstance;
    public static StationMsg getDefaultInstance() {
      return defaultInstance;
    }

    public StationMsg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private StationMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              CmdRet value = CmdRet.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                ret_ = value;
              }
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              sn_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              netid_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              mcdomain_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              mcport_ = bs;
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              key_ = bs;
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              NwkAccessMode value = NwkAccessMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(7, rawValue);
              } else {
                bitField0_ |= 0x00000040;
                nwkAccessMode_ = value;
              }
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
              IPAllocationMode value = IPAllocationMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(8, rawValue);
              } else {
                bitField0_ |= 0x00000080;
                ipAlloc_ = value;
              }
              break;
            }
            case 74: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000100;
              ip_ = bs;
              break;
            }
            case 82: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000200;
              gateway_ = bs;
              break;
            }
            case 90: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000400;
              mask_ = bs;
              break;
            }
            case 98: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000800;
              pdns_ = bs;
              break;
            }
            case 106: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00001000;
              adns_ = bs;
              break;
            }
            case 114: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00002000;
              ssid_ = bs;
              break;
            }
            case 122: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00004000;
              pwd_ = bs;
              break;
            }
            case 130: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00008000;
              encrypt_ = bs;
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              selfTestCode_ = input.readUInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              sglFreq_ = input.readUInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              sglDr_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ProtoStationMsgV2.internal_static_StationMsg_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ProtoStationMsgV2.internal_static_StationMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              StationMsg.class, Builder.class);
    }

    public static com.google.protobuf.Parser<StationMsg> PARSER =
        new com.google.protobuf.AbstractParser<StationMsg>() {
      public StationMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StationMsg(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<StationMsg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int RET_FIELD_NUMBER = 1;
    private CmdRet ret_;
    /**
     * <code>optional .CmdRet ret = 1;</code>
     *
     * <pre>
     *命令返回
     * </pre>
     */
    public boolean hasRet() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CmdRet ret = 1;</code>
     *
     * <pre>
     *命令返回
     * </pre>
     */
    public CmdRet getRet() {
      return ret_;
    }

    public static final int SN_FIELD_NUMBER = 2;
    private Object sn_;
    /**
     * <code>optional string sn = 2;</code>
     *
     * <pre>
     *基站SN，只读
     * </pre>
     */
    public boolean hasSn() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string sn = 2;</code>
     *
     * <pre>
     *基站SN，只读
     * </pre>
     */
    public String getSn() {
      Object ref = sn_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sn_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string sn = 2;</code>
     *
     * <pre>
     *基站SN，只读
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSnBytes() {
      Object ref = sn_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        sn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NETID_FIELD_NUMBER = 3;
    private Object netid_;
    /**
     * <code>optional string netid = 3;</code>
     *
     * <pre>
     *LoRaWAN网络ID
     * </pre>
     */
    public boolean hasNetid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string netid = 3;</code>
     *
     * <pre>
     *LoRaWAN网络ID
     * </pre>
     */
    public String getNetid() {
      Object ref = netid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          netid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string netid = 3;</code>
     *
     * <pre>
     *LoRaWAN网络ID
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNetidBytes() {
      Object ref = netid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        netid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MCDOMAIN_FIELD_NUMBER = 4;
    private Object mcdomain_;
    /**
     * <code>optional string mcdomain = 4;</code>
     *
     * <pre>
     *LoRaWAN MACServer地址
     * </pre>
     */
    public boolean hasMcdomain() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string mcdomain = 4;</code>
     *
     * <pre>
     *LoRaWAN MACServer地址
     * </pre>
     */
    public String getMcdomain() {
      Object ref = mcdomain_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mcdomain_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string mcdomain = 4;</code>
     *
     * <pre>
     *LoRaWAN MACServer地址
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMcdomainBytes() {
      Object ref = mcdomain_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        mcdomain_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MCPORT_FIELD_NUMBER = 5;
    private Object mcport_;
    /**
     * <code>optional string mcport = 5;</code>
     *
     * <pre>
     *LoRaWAN MACServer端口
     * </pre>
     */
    public boolean hasMcport() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string mcport = 5;</code>
     *
     * <pre>
     *LoRaWAN MACServer端口
     * </pre>
     */
    public String getMcport() {
      Object ref = mcport_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mcport_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string mcport = 5;</code>
     *
     * <pre>
     *LoRaWAN MACServer端口
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMcportBytes() {
      Object ref = mcport_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        mcport_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int KEY_FIELD_NUMBER = 6;
    private Object key_;
    /**
     * <code>optional string key = 6;</code>
     *
     * <pre>
     *基站与LoRaWAN MACServer通信加密密钥
     * </pre>
     */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string key = 6;</code>
     *
     * <pre>
     *基站与LoRaWAN MACServer通信加密密钥
     * </pre>
     */
    public String getKey() {
      Object ref = key_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          key_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string key = 6;</code>
     *
     * <pre>
     *基站与LoRaWAN MACServer通信加密密钥
     * </pre>
     */
    public com.google.protobuf.ByteString
        getKeyBytes() {
      Object ref = key_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NWK_ACCESS_MODE_FIELD_NUMBER = 7;
    private NwkAccessMode nwkAccessMode_;
    /**
     * <code>optional .NwkAccessMode nwk_access_mode = 7;</code>
     *
     * <pre>
     *网络接入方式
     * </pre>
     */
    public boolean hasNwkAccessMode() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .NwkAccessMode nwk_access_mode = 7;</code>
     *
     * <pre>
     *网络接入方式
     * </pre>
     */
    public NwkAccessMode getNwkAccessMode() {
      return nwkAccessMode_;
    }

    public static final int IP_ALLOC_FIELD_NUMBER = 8;
    private IPAllocationMode ipAlloc_;
    /**
     * <code>optional .IPAllocationMode ip_alloc = 8;</code>
     *
     * <pre>
     *IP地址分配方式
     * </pre>
     */
    public boolean hasIpAlloc() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .IPAllocationMode ip_alloc = 8;</code>
     *
     * <pre>
     *IP地址分配方式
     * </pre>
     */
    public IPAllocationMode getIpAlloc() {
      return ipAlloc_;
    }

    public static final int IP_FIELD_NUMBER = 9;
    private Object ip_;
    /**
     * <code>optional string ip = 9;</code>
     *
     * <pre>
     *IP地址
     * </pre>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string ip = 9;</code>
     *
     * <pre>
     *IP地址
     * </pre>
     */
    public String getIp() {
      Object ref = ip_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ip_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ip = 9;</code>
     *
     * <pre>
     *IP地址
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      Object ref = ip_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GATEWAY_FIELD_NUMBER = 10;
    private Object gateway_;
    /**
     * <code>optional string gateway = 10;</code>
     *
     * <pre>
     *网关地址
     * </pre>
     */
    public boolean hasGateway() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string gateway = 10;</code>
     *
     * <pre>
     *网关地址
     * </pre>
     */
    public String getGateway() {
      Object ref = gateway_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gateway_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string gateway = 10;</code>
     *
     * <pre>
     *网关地址
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGatewayBytes() {
      Object ref = gateway_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        gateway_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MASK_FIELD_NUMBER = 11;
    private Object mask_;
    /**
     * <code>optional string mask = 11;</code>
     *
     * <pre>
     *子网掩码
     * </pre>
     */
    public boolean hasMask() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string mask = 11;</code>
     *
     * <pre>
     *子网掩码
     * </pre>
     */
    public String getMask() {
      Object ref = mask_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mask_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string mask = 11;</code>
     *
     * <pre>
     *子网掩码
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMaskBytes() {
      Object ref = mask_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        mask_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PDNS_FIELD_NUMBER = 12;
    private Object pdns_;
    /**
     * <code>optional string pdns = 12;</code>
     *
     * <pre>
     *主DNS
     * </pre>
     */
    public boolean hasPdns() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional string pdns = 12;</code>
     *
     * <pre>
     *主DNS
     * </pre>
     */
    public String getPdns() {
      Object ref = pdns_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pdns_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string pdns = 12;</code>
     *
     * <pre>
     *主DNS
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPdnsBytes() {
      Object ref = pdns_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        pdns_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ADNS_FIELD_NUMBER = 13;
    private Object adns_;
    /**
     * <code>optional string adns = 13;</code>
     *
     * <pre>
     *从DNS
     * </pre>
     */
    public boolean hasAdns() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional string adns = 13;</code>
     *
     * <pre>
     *从DNS
     * </pre>
     */
    public String getAdns() {
      Object ref = adns_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          adns_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string adns = 13;</code>
     *
     * <pre>
     *从DNS
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAdnsBytes() {
      Object ref = adns_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        adns_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SSID_FIELD_NUMBER = 14;
    private Object ssid_;
    /**
     * <code>optional string ssid = 14;</code>
     *
     * <pre>
     *WiFi联网的SSID
     * </pre>
     */
    public boolean hasSsid() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional string ssid = 14;</code>
     *
     * <pre>
     *WiFi联网的SSID
     * </pre>
     */
    public String getSsid() {
      Object ref = ssid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ssid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ssid = 14;</code>
     *
     * <pre>
     *WiFi联网的SSID
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSsidBytes() {
      Object ref = ssid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        ssid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PWD_FIELD_NUMBER = 15;
    private Object pwd_;
    /**
     * <code>optional string pwd = 15;</code>
     *
     * <pre>
     *WiFi联网的Password
     * </pre>
     */
    public boolean hasPwd() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional string pwd = 15;</code>
     *
     * <pre>
     *WiFi联网的Password
     * </pre>
     */
    public String getPwd() {
      Object ref = pwd_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pwd_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string pwd = 15;</code>
     *
     * <pre>
     *WiFi联网的Password
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPwdBytes() {
      Object ref = pwd_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        pwd_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ENCRYPT_FIELD_NUMBER = 16;
    private Object encrypt_;
    /**
     * <code>optional string encrypt = 16;</code>
     *
     * <pre>
     *WiFi联网的加密方式
     * </pre>
     */
    public boolean hasEncrypt() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional string encrypt = 16;</code>
     *
     * <pre>
     *WiFi联网的加密方式
     * </pre>
     */
    public String getEncrypt() {
      Object ref = encrypt_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          encrypt_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string encrypt = 16;</code>
     *
     * <pre>
     *WiFi联网的加密方式
     * </pre>
     */
    public com.google.protobuf.ByteString
        getEncryptBytes() {
      Object ref = encrypt_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        encrypt_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SELF_TEST_CODE_FIELD_NUMBER = 17;
    private int selfTestCode_;
    /**
     * <code>optional uint32 self_test_code = 17;</code>
     *
     * <pre>
     *自检错误码
     * </pre>
     */
    public boolean hasSelfTestCode() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional uint32 self_test_code = 17;</code>
     *
     * <pre>
     *自检错误码
     * </pre>
     */
    public int getSelfTestCode() {
      return selfTestCode_;
    }

    public static final int SGL_FREQ_FIELD_NUMBER = 18;
    private int sglFreq_;
    /**
     * <code>optional uint32 sgl_freq = 18;</code>
     *
     * <pre>
     *单通道基站频点
     * </pre>
     */
    public boolean hasSglFreq() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional uint32 sgl_freq = 18;</code>
     *
     * <pre>
     *单通道基站频点
     * </pre>
     */
    public int getSglFreq() {
      return sglFreq_;
    }

    public static final int SGL_DR_FIELD_NUMBER = 19;
    private int sglDr_;
    /**
     * <code>optional uint32 sgl_dr = 19;</code>
     *
     * <pre>
     *单通道基站DR    
     * </pre>
     */
    public boolean hasSglDr() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional uint32 sgl_dr = 19;</code>
     *
     * <pre>
     *单通道基站DR    
     * </pre>
     */
    public int getSglDr() {
      return sglDr_;
    }

    private void initFields() {
      ret_ = CmdRet.CMD_RET_NONE;
      sn_ = "";
      netid_ = "";
      mcdomain_ = "";
      mcport_ = "";
      key_ = "";
      nwkAccessMode_ = NwkAccessMode.NWK_MODE_ETH;
      ipAlloc_ = IPAllocationMode.IP_ALLOC_DHCP;
      ip_ = "";
      gateway_ = "";
      mask_ = "";
      pdns_ = "";
      adns_ = "";
      ssid_ = "";
      pwd_ = "";
      encrypt_ = "";
      selfTestCode_ = 0;
      sglFreq_ = 0;
      sglDr_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, ret_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getSnBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getNetidBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getMcdomainBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getMcportBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getKeyBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(7, nwkAccessMode_.getNumber());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeEnum(8, ipAlloc_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getIpBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getGatewayBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getMaskBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(12, getPdnsBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(13, getAdnsBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(14, getSsidBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(15, getPwdBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeBytes(16, getEncryptBytes());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeUInt32(17, selfTestCode_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeUInt32(18, sglFreq_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeUInt32(19, sglDr_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, ret_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getSnBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNetidBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getMcdomainBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getMcportBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getKeyBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, nwkAccessMode_.getNumber());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, ipAlloc_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getIpBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getGatewayBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getMaskBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getPdnsBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getAdnsBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getSsidBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, getPwdBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(16, getEncryptBytes());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, selfTestCode_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, sglFreq_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(19, sglDr_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static StationMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StationMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StationMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StationMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StationMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StationMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static StationMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static StationMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static StationMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StationMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(StationMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code StationMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:StationMsg)
        StationMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ProtoStationMsgV2.internal_static_StationMsg_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ProtoStationMsgV2.internal_static_StationMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                StationMsg.class, Builder.class);
      }

      // Construct using ProtoStationMsgV2.StationMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ret_ = CmdRet.CMD_RET_NONE;
        bitField0_ = (bitField0_ & ~0x00000001);
        sn_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        netid_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        mcdomain_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        mcport_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        key_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        nwkAccessMode_ = NwkAccessMode.NWK_MODE_ETH;
        bitField0_ = (bitField0_ & ~0x00000040);
        ipAlloc_ = IPAllocationMode.IP_ALLOC_DHCP;
        bitField0_ = (bitField0_ & ~0x00000080);
        ip_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        gateway_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        mask_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        pdns_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        adns_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        ssid_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        pwd_ = "";
        bitField0_ = (bitField0_ & ~0x00004000);
        encrypt_ = "";
        bitField0_ = (bitField0_ & ~0x00008000);
        selfTestCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        sglFreq_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        sglDr_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ProtoStationMsgV2.internal_static_StationMsg_descriptor;
      }

      public StationMsg getDefaultInstanceForType() {
        return StationMsg.getDefaultInstance();
      }

      public StationMsg build() {
        StationMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public StationMsg buildPartial() {
        StationMsg result = new StationMsg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ret_ = ret_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sn_ = sn_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.netid_ = netid_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.mcdomain_ = mcdomain_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.mcport_ = mcport_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.nwkAccessMode_ = nwkAccessMode_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.ipAlloc_ = ipAlloc_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.gateway_ = gateway_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.mask_ = mask_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.pdns_ = pdns_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.adns_ = adns_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.ssid_ = ssid_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.pwd_ = pwd_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.encrypt_ = encrypt_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.selfTestCode_ = selfTestCode_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.sglFreq_ = sglFreq_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.sglDr_ = sglDr_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof StationMsg) {
          return mergeFrom((StationMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(StationMsg other) {
        if (other == StationMsg.getDefaultInstance()) return this;
        if (other.hasRet()) {
          setRet(other.getRet());
        }
        if (other.hasSn()) {
          bitField0_ |= 0x00000002;
          sn_ = other.sn_;
          onChanged();
        }
        if (other.hasNetid()) {
          bitField0_ |= 0x00000004;
          netid_ = other.netid_;
          onChanged();
        }
        if (other.hasMcdomain()) {
          bitField0_ |= 0x00000008;
          mcdomain_ = other.mcdomain_;
          onChanged();
        }
        if (other.hasMcport()) {
          bitField0_ |= 0x00000010;
          mcport_ = other.mcport_;
          onChanged();
        }
        if (other.hasKey()) {
          bitField0_ |= 0x00000020;
          key_ = other.key_;
          onChanged();
        }
        if (other.hasNwkAccessMode()) {
          setNwkAccessMode(other.getNwkAccessMode());
        }
        if (other.hasIpAlloc()) {
          setIpAlloc(other.getIpAlloc());
        }
        if (other.hasIp()) {
          bitField0_ |= 0x00000100;
          ip_ = other.ip_;
          onChanged();
        }
        if (other.hasGateway()) {
          bitField0_ |= 0x00000200;
          gateway_ = other.gateway_;
          onChanged();
        }
        if (other.hasMask()) {
          bitField0_ |= 0x00000400;
          mask_ = other.mask_;
          onChanged();
        }
        if (other.hasPdns()) {
          bitField0_ |= 0x00000800;
          pdns_ = other.pdns_;
          onChanged();
        }
        if (other.hasAdns()) {
          bitField0_ |= 0x00001000;
          adns_ = other.adns_;
          onChanged();
        }
        if (other.hasSsid()) {
          bitField0_ |= 0x00002000;
          ssid_ = other.ssid_;
          onChanged();
        }
        if (other.hasPwd()) {
          bitField0_ |= 0x00004000;
          pwd_ = other.pwd_;
          onChanged();
        }
        if (other.hasEncrypt()) {
          bitField0_ |= 0x00008000;
          encrypt_ = other.encrypt_;
          onChanged();
        }
        if (other.hasSelfTestCode()) {
          setSelfTestCode(other.getSelfTestCode());
        }
        if (other.hasSglFreq()) {
          setSglFreq(other.getSglFreq());
        }
        if (other.hasSglDr()) {
          setSglDr(other.getSglDr());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        StationMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (StationMsg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private CmdRet ret_ = CmdRet.CMD_RET_NONE;
      /**
       * <code>optional .CmdRet ret = 1;</code>
       *
       * <pre>
       *命令返回
       * </pre>
       */
      public boolean hasRet() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CmdRet ret = 1;</code>
       *
       * <pre>
       *命令返回
       * </pre>
       */
      public CmdRet getRet() {
        return ret_;
      }
      /**
       * <code>optional .CmdRet ret = 1;</code>
       *
       * <pre>
       *命令返回
       * </pre>
       */
      public Builder setRet(CmdRet value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        ret_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CmdRet ret = 1;</code>
       *
       * <pre>
       *命令返回
       * </pre>
       */
      public Builder clearRet() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ret_ = CmdRet.CMD_RET_NONE;
        onChanged();
        return this;
      }

      private Object sn_ = "";
      /**
       * <code>optional string sn = 2;</code>
       *
       * <pre>
       *基站SN，只读
       * </pre>
       */
      public boolean hasSn() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string sn = 2;</code>
       *
       * <pre>
       *基站SN，只读
       * </pre>
       */
      public String getSn() {
        Object ref = sn_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sn_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string sn = 2;</code>
       *
       * <pre>
       *基站SN，只读
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSnBytes() {
        Object ref = sn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          sn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string sn = 2;</code>
       *
       * <pre>
       *基站SN，只读
       * </pre>
       */
      public Builder setSn(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        sn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string sn = 2;</code>
       *
       * <pre>
       *基站SN，只读
       * </pre>
       */
      public Builder clearSn() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sn_ = getDefaultInstance().getSn();
        onChanged();
        return this;
      }
      /**
       * <code>optional string sn = 2;</code>
       *
       * <pre>
       *基站SN，只读
       * </pre>
       */
      public Builder setSnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        sn_ = value;
        onChanged();
        return this;
      }

      private Object netid_ = "";
      /**
       * <code>optional string netid = 3;</code>
       *
       * <pre>
       *LoRaWAN网络ID
       * </pre>
       */
      public boolean hasNetid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string netid = 3;</code>
       *
       * <pre>
       *LoRaWAN网络ID
       * </pre>
       */
      public String getNetid() {
        Object ref = netid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            netid_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string netid = 3;</code>
       *
       * <pre>
       *LoRaWAN网络ID
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNetidBytes() {
        Object ref = netid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          netid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string netid = 3;</code>
       *
       * <pre>
       *LoRaWAN网络ID
       * </pre>
       */
      public Builder setNetid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        netid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string netid = 3;</code>
       *
       * <pre>
       *LoRaWAN网络ID
       * </pre>
       */
      public Builder clearNetid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        netid_ = getDefaultInstance().getNetid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string netid = 3;</code>
       *
       * <pre>
       *LoRaWAN网络ID
       * </pre>
       */
      public Builder setNetidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        netid_ = value;
        onChanged();
        return this;
      }

      private Object mcdomain_ = "";
      /**
       * <code>optional string mcdomain = 4;</code>
       *
       * <pre>
       *LoRaWAN MACServer地址
       * </pre>
       */
      public boolean hasMcdomain() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string mcdomain = 4;</code>
       *
       * <pre>
       *LoRaWAN MACServer地址
       * </pre>
       */
      public String getMcdomain() {
        Object ref = mcdomain_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            mcdomain_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string mcdomain = 4;</code>
       *
       * <pre>
       *LoRaWAN MACServer地址
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMcdomainBytes() {
        Object ref = mcdomain_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          mcdomain_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string mcdomain = 4;</code>
       *
       * <pre>
       *LoRaWAN MACServer地址
       * </pre>
       */
      public Builder setMcdomain(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        mcdomain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string mcdomain = 4;</code>
       *
       * <pre>
       *LoRaWAN MACServer地址
       * </pre>
       */
      public Builder clearMcdomain() {
        bitField0_ = (bitField0_ & ~0x00000008);
        mcdomain_ = getDefaultInstance().getMcdomain();
        onChanged();
        return this;
      }
      /**
       * <code>optional string mcdomain = 4;</code>
       *
       * <pre>
       *LoRaWAN MACServer地址
       * </pre>
       */
      public Builder setMcdomainBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        mcdomain_ = value;
        onChanged();
        return this;
      }

      private Object mcport_ = "";
      /**
       * <code>optional string mcport = 5;</code>
       *
       * <pre>
       *LoRaWAN MACServer端口
       * </pre>
       */
      public boolean hasMcport() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string mcport = 5;</code>
       *
       * <pre>
       *LoRaWAN MACServer端口
       * </pre>
       */
      public String getMcport() {
        Object ref = mcport_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            mcport_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string mcport = 5;</code>
       *
       * <pre>
       *LoRaWAN MACServer端口
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMcportBytes() {
        Object ref = mcport_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          mcport_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string mcport = 5;</code>
       *
       * <pre>
       *LoRaWAN MACServer端口
       * </pre>
       */
      public Builder setMcport(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        mcport_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string mcport = 5;</code>
       *
       * <pre>
       *LoRaWAN MACServer端口
       * </pre>
       */
      public Builder clearMcport() {
        bitField0_ = (bitField0_ & ~0x00000010);
        mcport_ = getDefaultInstance().getMcport();
        onChanged();
        return this;
      }
      /**
       * <code>optional string mcport = 5;</code>
       *
       * <pre>
       *LoRaWAN MACServer端口
       * </pre>
       */
      public Builder setMcportBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        mcport_ = value;
        onChanged();
        return this;
      }

      private Object key_ = "";
      /**
       * <code>optional string key = 6;</code>
       *
       * <pre>
       *基站与LoRaWAN MACServer通信加密密钥
       * </pre>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string key = 6;</code>
       *
       * <pre>
       *基站与LoRaWAN MACServer通信加密密钥
       * </pre>
       */
      public String getKey() {
        Object ref = key_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            key_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string key = 6;</code>
       *
       * <pre>
       *基站与LoRaWAN MACServer通信加密密钥
       * </pre>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string key = 6;</code>
       *
       * <pre>
       *基站与LoRaWAN MACServer通信加密密钥
       * </pre>
       */
      public Builder setKey(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string key = 6;</code>
       *
       * <pre>
       *基站与LoRaWAN MACServer通信加密密钥
       * </pre>
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000020);
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <code>optional string key = 6;</code>
       *
       * <pre>
       *基站与LoRaWAN MACServer通信加密密钥
       * </pre>
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        key_ = value;
        onChanged();
        return this;
      }

      private NwkAccessMode nwkAccessMode_ = NwkAccessMode.NWK_MODE_ETH;
      /**
       * <code>optional .NwkAccessMode nwk_access_mode = 7;</code>
       *
       * <pre>
       *网络接入方式
       * </pre>
       */
      public boolean hasNwkAccessMode() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .NwkAccessMode nwk_access_mode = 7;</code>
       *
       * <pre>
       *网络接入方式
       * </pre>
       */
      public NwkAccessMode getNwkAccessMode() {
        return nwkAccessMode_;
      }
      /**
       * <code>optional .NwkAccessMode nwk_access_mode = 7;</code>
       *
       * <pre>
       *网络接入方式
       * </pre>
       */
      public Builder setNwkAccessMode(NwkAccessMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        nwkAccessMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .NwkAccessMode nwk_access_mode = 7;</code>
       *
       * <pre>
       *网络接入方式
       * </pre>
       */
      public Builder clearNwkAccessMode() {
        bitField0_ = (bitField0_ & ~0x00000040);
        nwkAccessMode_ = NwkAccessMode.NWK_MODE_ETH;
        onChanged();
        return this;
      }

      private IPAllocationMode ipAlloc_ = IPAllocationMode.IP_ALLOC_DHCP;
      /**
       * <code>optional .IPAllocationMode ip_alloc = 8;</code>
       *
       * <pre>
       *IP地址分配方式
       * </pre>
       */
      public boolean hasIpAlloc() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .IPAllocationMode ip_alloc = 8;</code>
       *
       * <pre>
       *IP地址分配方式
       * </pre>
       */
      public IPAllocationMode getIpAlloc() {
        return ipAlloc_;
      }
      /**
       * <code>optional .IPAllocationMode ip_alloc = 8;</code>
       *
       * <pre>
       *IP地址分配方式
       * </pre>
       */
      public Builder setIpAlloc(IPAllocationMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        ipAlloc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .IPAllocationMode ip_alloc = 8;</code>
       *
       * <pre>
       *IP地址分配方式
       * </pre>
       */
      public Builder clearIpAlloc() {
        bitField0_ = (bitField0_ & ~0x00000080);
        ipAlloc_ = IPAllocationMode.IP_ALLOC_DHCP;
        onChanged();
        return this;
      }

      private Object ip_ = "";
      /**
       * <code>optional string ip = 9;</code>
       *
       * <pre>
       *IP地址
       * </pre>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string ip = 9;</code>
       *
       * <pre>
       *IP地址
       * </pre>
       */
      public String getIp() {
        Object ref = ip_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ip_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string ip = 9;</code>
       *
       * <pre>
       *IP地址
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ip = 9;</code>
       *
       * <pre>
       *IP地址
       * </pre>
       */
      public Builder setIp(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 9;</code>
       *
       * <pre>
       *IP地址
       * </pre>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000100);
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 9;</code>
       *
       * <pre>
       *IP地址
       * </pre>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        ip_ = value;
        onChanged();
        return this;
      }

      private Object gateway_ = "";
      /**
       * <code>optional string gateway = 10;</code>
       *
       * <pre>
       *网关地址
       * </pre>
       */
      public boolean hasGateway() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string gateway = 10;</code>
       *
       * <pre>
       *网关地址
       * </pre>
       */
      public String getGateway() {
        Object ref = gateway_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            gateway_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string gateway = 10;</code>
       *
       * <pre>
       *网关地址
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGatewayBytes() {
        Object ref = gateway_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          gateway_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string gateway = 10;</code>
       *
       * <pre>
       *网关地址
       * </pre>
       */
      public Builder setGateway(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        gateway_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string gateway = 10;</code>
       *
       * <pre>
       *网关地址
       * </pre>
       */
      public Builder clearGateway() {
        bitField0_ = (bitField0_ & ~0x00000200);
        gateway_ = getDefaultInstance().getGateway();
        onChanged();
        return this;
      }
      /**
       * <code>optional string gateway = 10;</code>
       *
       * <pre>
       *网关地址
       * </pre>
       */
      public Builder setGatewayBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        gateway_ = value;
        onChanged();
        return this;
      }

      private Object mask_ = "";
      /**
       * <code>optional string mask = 11;</code>
       *
       * <pre>
       *子网掩码
       * </pre>
       */
      public boolean hasMask() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string mask = 11;</code>
       *
       * <pre>
       *子网掩码
       * </pre>
       */
      public String getMask() {
        Object ref = mask_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            mask_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string mask = 11;</code>
       *
       * <pre>
       *子网掩码
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMaskBytes() {
        Object ref = mask_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          mask_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string mask = 11;</code>
       *
       * <pre>
       *子网掩码
       * </pre>
       */
      public Builder setMask(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        mask_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string mask = 11;</code>
       *
       * <pre>
       *子网掩码
       * </pre>
       */
      public Builder clearMask() {
        bitField0_ = (bitField0_ & ~0x00000400);
        mask_ = getDefaultInstance().getMask();
        onChanged();
        return this;
      }
      /**
       * <code>optional string mask = 11;</code>
       *
       * <pre>
       *子网掩码
       * </pre>
       */
      public Builder setMaskBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        mask_ = value;
        onChanged();
        return this;
      }

      private Object pdns_ = "";
      /**
       * <code>optional string pdns = 12;</code>
       *
       * <pre>
       *主DNS
       * </pre>
       */
      public boolean hasPdns() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string pdns = 12;</code>
       *
       * <pre>
       *主DNS
       * </pre>
       */
      public String getPdns() {
        Object ref = pdns_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            pdns_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string pdns = 12;</code>
       *
       * <pre>
       *主DNS
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPdnsBytes() {
        Object ref = pdns_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          pdns_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string pdns = 12;</code>
       *
       * <pre>
       *主DNS
       * </pre>
       */
      public Builder setPdns(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        pdns_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string pdns = 12;</code>
       *
       * <pre>
       *主DNS
       * </pre>
       */
      public Builder clearPdns() {
        bitField0_ = (bitField0_ & ~0x00000800);
        pdns_ = getDefaultInstance().getPdns();
        onChanged();
        return this;
      }
      /**
       * <code>optional string pdns = 12;</code>
       *
       * <pre>
       *主DNS
       * </pre>
       */
      public Builder setPdnsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        pdns_ = value;
        onChanged();
        return this;
      }

      private Object adns_ = "";
      /**
       * <code>optional string adns = 13;</code>
       *
       * <pre>
       *从DNS
       * </pre>
       */
      public boolean hasAdns() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional string adns = 13;</code>
       *
       * <pre>
       *从DNS
       * </pre>
       */
      public String getAdns() {
        Object ref = adns_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            adns_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string adns = 13;</code>
       *
       * <pre>
       *从DNS
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAdnsBytes() {
        Object ref = adns_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          adns_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string adns = 13;</code>
       *
       * <pre>
       *从DNS
       * </pre>
       */
      public Builder setAdns(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        adns_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string adns = 13;</code>
       *
       * <pre>
       *从DNS
       * </pre>
       */
      public Builder clearAdns() {
        bitField0_ = (bitField0_ & ~0x00001000);
        adns_ = getDefaultInstance().getAdns();
        onChanged();
        return this;
      }
      /**
       * <code>optional string adns = 13;</code>
       *
       * <pre>
       *从DNS
       * </pre>
       */
      public Builder setAdnsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        adns_ = value;
        onChanged();
        return this;
      }

      private Object ssid_ = "";
      /**
       * <code>optional string ssid = 14;</code>
       *
       * <pre>
       *WiFi联网的SSID
       * </pre>
       */
      public boolean hasSsid() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional string ssid = 14;</code>
       *
       * <pre>
       *WiFi联网的SSID
       * </pre>
       */
      public String getSsid() {
        Object ref = ssid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ssid_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string ssid = 14;</code>
       *
       * <pre>
       *WiFi联网的SSID
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSsidBytes() {
        Object ref = ssid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          ssid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ssid = 14;</code>
       *
       * <pre>
       *WiFi联网的SSID
       * </pre>
       */
      public Builder setSsid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        ssid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ssid = 14;</code>
       *
       * <pre>
       *WiFi联网的SSID
       * </pre>
       */
      public Builder clearSsid() {
        bitField0_ = (bitField0_ & ~0x00002000);
        ssid_ = getDefaultInstance().getSsid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ssid = 14;</code>
       *
       * <pre>
       *WiFi联网的SSID
       * </pre>
       */
      public Builder setSsidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        ssid_ = value;
        onChanged();
        return this;
      }

      private Object pwd_ = "";
      /**
       * <code>optional string pwd = 15;</code>
       *
       * <pre>
       *WiFi联网的Password
       * </pre>
       */
      public boolean hasPwd() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional string pwd = 15;</code>
       *
       * <pre>
       *WiFi联网的Password
       * </pre>
       */
      public String getPwd() {
        Object ref = pwd_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            pwd_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string pwd = 15;</code>
       *
       * <pre>
       *WiFi联网的Password
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPwdBytes() {
        Object ref = pwd_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          pwd_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string pwd = 15;</code>
       *
       * <pre>
       *WiFi联网的Password
       * </pre>
       */
      public Builder setPwd(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        pwd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string pwd = 15;</code>
       *
       * <pre>
       *WiFi联网的Password
       * </pre>
       */
      public Builder clearPwd() {
        bitField0_ = (bitField0_ & ~0x00004000);
        pwd_ = getDefaultInstance().getPwd();
        onChanged();
        return this;
      }
      /**
       * <code>optional string pwd = 15;</code>
       *
       * <pre>
       *WiFi联网的Password
       * </pre>
       */
      public Builder setPwdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        pwd_ = value;
        onChanged();
        return this;
      }

      private Object encrypt_ = "";
      /**
       * <code>optional string encrypt = 16;</code>
       *
       * <pre>
       *WiFi联网的加密方式
       * </pre>
       */
      public boolean hasEncrypt() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional string encrypt = 16;</code>
       *
       * <pre>
       *WiFi联网的加密方式
       * </pre>
       */
      public String getEncrypt() {
        Object ref = encrypt_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            encrypt_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string encrypt = 16;</code>
       *
       * <pre>
       *WiFi联网的加密方式
       * </pre>
       */
      public com.google.protobuf.ByteString
          getEncryptBytes() {
        Object ref = encrypt_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          encrypt_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string encrypt = 16;</code>
       *
       * <pre>
       *WiFi联网的加密方式
       * </pre>
       */
      public Builder setEncrypt(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        encrypt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string encrypt = 16;</code>
       *
       * <pre>
       *WiFi联网的加密方式
       * </pre>
       */
      public Builder clearEncrypt() {
        bitField0_ = (bitField0_ & ~0x00008000);
        encrypt_ = getDefaultInstance().getEncrypt();
        onChanged();
        return this;
      }
      /**
       * <code>optional string encrypt = 16;</code>
       *
       * <pre>
       *WiFi联网的加密方式
       * </pre>
       */
      public Builder setEncryptBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        encrypt_ = value;
        onChanged();
        return this;
      }

      private int selfTestCode_ ;
      /**
       * <code>optional uint32 self_test_code = 17;</code>
       *
       * <pre>
       *自检错误码
       * </pre>
       */
      public boolean hasSelfTestCode() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional uint32 self_test_code = 17;</code>
       *
       * <pre>
       *自检错误码
       * </pre>
       */
      public int getSelfTestCode() {
        return selfTestCode_;
      }
      /**
       * <code>optional uint32 self_test_code = 17;</code>
       *
       * <pre>
       *自检错误码
       * </pre>
       */
      public Builder setSelfTestCode(int value) {
        bitField0_ |= 0x00010000;
        selfTestCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 self_test_code = 17;</code>
       *
       * <pre>
       *自检错误码
       * </pre>
       */
      public Builder clearSelfTestCode() {
        bitField0_ = (bitField0_ & ~0x00010000);
        selfTestCode_ = 0;
        onChanged();
        return this;
      }

      private int sglFreq_ ;
      /**
       * <code>optional uint32 sgl_freq = 18;</code>
       *
       * <pre>
       *单通道基站频点
       * </pre>
       */
      public boolean hasSglFreq() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional uint32 sgl_freq = 18;</code>
       *
       * <pre>
       *单通道基站频点
       * </pre>
       */
      public int getSglFreq() {
        return sglFreq_;
      }
      /**
       * <code>optional uint32 sgl_freq = 18;</code>
       *
       * <pre>
       *单通道基站频点
       * </pre>
       */
      public Builder setSglFreq(int value) {
        bitField0_ |= 0x00020000;
        sglFreq_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 sgl_freq = 18;</code>
       *
       * <pre>
       *单通道基站频点
       * </pre>
       */
      public Builder clearSglFreq() {
        bitField0_ = (bitField0_ & ~0x00020000);
        sglFreq_ = 0;
        onChanged();
        return this;
      }

      private int sglDr_ ;
      /**
       * <code>optional uint32 sgl_dr = 19;</code>
       *
       * <pre>
       *单通道基站DR    
       * </pre>
       */
      public boolean hasSglDr() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional uint32 sgl_dr = 19;</code>
       *
       * <pre>
       *单通道基站DR    
       * </pre>
       */
      public int getSglDr() {
        return sglDr_;
      }
      /**
       * <code>optional uint32 sgl_dr = 19;</code>
       *
       * <pre>
       *单通道基站DR    
       * </pre>
       */
      public Builder setSglDr(int value) {
        bitField0_ |= 0x00040000;
        sglDr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 sgl_dr = 19;</code>
       *
       * <pre>
       *单通道基站DR    
       * </pre>
       */
      public Builder clearSglDr() {
        bitField0_ = (bitField0_ & ~0x00040000);
        sglDr_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:StationMsg)
    }

    static {
      defaultInstance = new StationMsg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:StationMsg)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_StationMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_StationMsg_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\030ProtoStationMsg_v2.proto\"\347\002\n\nStationMs" +
      "g\022\024\n\003ret\030\001 \001(\0162\007.CmdRet\022\n\n\002sn\030\002 \001(\t\022\r\n\005n" +
      "etid\030\003 \001(\t\022\020\n\010mcdomain\030\004 \001(\t\022\016\n\006mcport\030\005" +
      " \001(\t\022\013\n\003key\030\006 \001(\t\022\'\n\017nwk_access_mode\030\007 \001" +
      "(\0162\016.NwkAccessMode\022#\n\010ip_alloc\030\010 \001(\0162\021.I" +
      "PAllocationMode\022\n\n\002ip\030\t \001(\t\022\017\n\007gateway\030\n" +
      " \001(\t\022\014\n\004mask\030\013 \001(\t\022\014\n\004pdns\030\014 \001(\t\022\014\n\004adns" +
      "\030\r \001(\t\022\014\n\004ssid\030\016 \001(\t\022\013\n\003pwd\030\017 \001(\t\022\017\n\007enc" +
      "rypt\030\020 \001(\t\022\026\n\016self_test_code\030\021 \001(\r\022\020\n\010sg" +
      "l_freq\030\022 \001(\r\022\016\n\006sgl_dr\030\023 \001(\r*x\n\006CmdRet\022\020",
      "\n\014CMD_RET_NONE\020\000\022\017\n\013CMD_RET_SUC\020\001\022\027\n\023CMD" +
      "_RET_INVALID_CMD\020\002\022\027\n\023CMD_RET_INVALID_AR" +
      "G\020\003\022\031\n\025CMD_RET_INVALID_STATE\020\004*K\n\rNwkAcc" +
      "essMode\022\020\n\014NWK_MODE_ETH\020\000\022\021\n\rNWK_MODE_WI" +
      "FI\020\001\022\025\n\021NWK_MODE_CELLULAR\020\002*:\n\020IPAllocat" +
      "ionMode\022\021\n\rIP_ALLOC_DHCP\020\000\022\023\n\017IP_ALLOC_S" +
      "TATIC\020\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_StationMsg_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_StationMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_StationMsg_descriptor,
        new String[] { "Ret", "Sn", "Netid", "Mcdomain", "Mcport", "Key", "NwkAccessMode", "IpAlloc", "Ip", "Gateway", "Mask", "Pdns", "Adns", "Ssid", "Pwd", "Encrypt", "SelfTestCode", "SglFreq", "SglDr", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
